{
    "swagger": "2.0",
    "info": {
        "title": "API для простого интернет-магазина",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/products": {
            "get": {
                "description": "Возвращает массив всех товаров, доступных в магазине",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Товары (Products)"
                ],
                "summary": "Получить список всех товаров",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.Product"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Добавляет новый товар в базу данных. ID в теле запроса игнорируется.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Товары (Products)"
                ],
                "summary": "Создать новый товар",
                "parameters": [
                    {
                        "description": "Данные для создания нового товара",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.Product"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/database.Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/router.HTTPError"
                        }
                    }
                }
            }
        },
        "/products/{id}": {
            "get": {
                "description": "Получает информацию о конкретном товаре по его ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Товары (Products)"
                ],
                "summary": "Получить товар по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID Товара",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.Product"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/router.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Полностью обновляет информацию о товаре с указанным ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Товары (Products)"
                ],
                "summary": "Обновить существующий товар",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID Товара для обновления",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Новые данные для товара",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/router.UpdateProductInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/router.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/router.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Удаляет товар из базы данных по его ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Товары (Products)"
                ],
                "summary": "Удалить товар",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID Товара для удаления",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/router.SuccessMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/router.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/router.HTTPError"
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "description": "Проверяет учетные данные и в случае успеха возвращает JWT токен.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Пользователи (Auth)"
                ],
                "summary": "Вход пользователя в систему",
                "parameters": [
                    {
                        "description": "Учетные данные для входа",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/router.LoginInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "JWT токен",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "token": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/router.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/router.HTTPError"
                        }
                    }
                }
            }
        },
        "/users/me": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает данные пользователя, аутентифицированного с помощью JWT токена.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Пользователи (Auth)"
                ],
                "summary": "Получить информацию о текущем пользователе",
                "responses": {
                    "200": {
                        "description": "Данные текущего пользователя",
                        "schema": {
                            "$ref": "#/definitions/database.Customer"
                        }
                    },
                    "401": {
                        "description": "Ошибка аутентификации",
                        "schema": {
                            "$ref": "#/definitions/router.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Пользователь из токена не найден в БД",
                        "schema": {
                            "$ref": "#/definitions/router.HTTPError"
                        }
                    }
                }
            }
        },
        "/users/register": {
            "post": {
                "description": "Создает новый аккаунт пользователя с email и паролем.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Пользователи (Auth)"
                ],
                "summary": "Регистрация нового пользователя",
                "parameters": [
                    {
                        "description": "Данные для регистрации",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/router.LoginInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Возвращает созданного пользователя",
                        "schema": {
                            "$ref": "#/definitions/database.Customer"
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации входных данных",
                        "schema": {
                            "$ref": "#/definitions/router.HTTPError"
                        }
                    },
                    "409": {
                        "description": "Пользователь с таким email уже существует",
                        "schema": {
                            "$ref": "#/definitions/router.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/router.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "database.Customer": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.Order"
                    }
                },
                "registrationDate": {
                    "type": "string"
                }
            }
        },
        "database.Order": {
            "type": "object",
            "properties": {
                "customerID": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.OrderItem"
                    }
                },
                "orderDate": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "database.OrderItem": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "orderID": {
                    "type": "integer"
                },
                "priceAtPurchase": {
                    "type": "number",
                    "format": "float64"
                },
                "product": {
                    "$ref": "#/definitions/database.Product"
                },
                "productID": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "database.Product": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number",
                    "format": "float64"
                }
            }
        },
        "router.HTTPError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Product not found"
                }
            }
        },
        "router.LoginInput": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                }
            }
        },
        "router.SuccessMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Product deleted successfully"
                }
            }
        },
        "router.UpdateProductInput": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number",
                    "minimum": 0
                }
            }
        }
    }
}